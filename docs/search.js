window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "type": "module", "doc": "<p>Library for easier use of Airlock's REST API.</p>\n\n<p>This library is not part of the official Airlock product delivery and\nErgon/Airlock does not provide support for it. Best effort support may\nbe provided by the contributor of the library.</p>\n\n<p>This library uses the <code>requests</code> library to perform standard HTTP requests\nto Airlock Gateway REST endpoints.</p>\n\n<p>404 response status codes are handled by this library, i.e. if a provided ID\nor REST endpoint cannot be found, no exceptions will be raised.</p>\n\n<p>For all other unexpected response status codes, e.g. malformed data is used to\ngenerate a new mapping, a custom Exception named <code>AirlockGatewayRestError</code> is\nraised.</p>\n\n<p>In addition to that, any Exception raised by the <code>requests</code> library is not\nhandled by this library, so for example if network problems occur,\nmultiple Errors will be raised by the underlying library.</p>\n"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "AirlockGatewayRestError", "type": "class", "doc": "<p>Custom Exception to inform Library users that an unexpected status\nhas been returbned by the performed REST call.</p>\n", "bases": "builtins.Exception"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError.__init__": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError.__init__", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "AirlockGatewayRestError.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">status_code</span>, </span><span class=\"param\"><span class=\"n\">message</span></span>)</span>"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "GatewaySession", "type": "class", "doc": "<p>Wrapper class for a REST Session with Airlock Gateway.</p>\n\n<p>Uses the <code>requests</code> Python library to perform HTTP.</p>\n"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.__init__": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.__init__", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "GatewaySession.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">host_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">ses</span><span class=\"p\">:</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span>, </span><span class=\"param\"><span class=\"n\">port</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "GatewaySession.add_headers", "type": "function", "doc": "<p>Adds the given <code>headers</code> to the REST Session.</p>\n\n<p>If one of the given <code>headers</code> was already set, it will be\noverwritten.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.get_session": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.get_session", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "GatewaySession.get_session", "type": "function", "doc": "<p>Returns the internal Session object of this object.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">sessions</span><span class=\"o\">.</span><span class=\"n\">Session</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "get_version", "type": "function", "doc": "<p>Returns the major and minor realease number (for example 8.0) of the\nAirlock Host, or None if the version could not be retrieved.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "req_raw", "type": "function", "doc": "<p>Performs a request to the Airlock Host at the specified path\nwith the given method. Optionally, the Content Type, payload and\nexpected response status codes can be specified.</p>\n\n<p>Returns the response object to the performed request.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">ctype</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">exp_code</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "req", "type": "function", "doc": "<p>Performs a request to the Airlock Host at the specified path\nwith the given method. Optionally, the JSON payload and\nexpected response status codes can be specified.</p>\n\n<p>Returns the response object to the performed request.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">body_dict</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">exp_code</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "post", "type": "function", "doc": "<p>Performs a POST request to the Airlock Host at the specified path.\nOptionally, the JSON payload and expected response status codes\ncan be specified.</p>\n\n<p>Returns the Response object to the performed request.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">body_dict</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">exp_code</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "patch", "type": "function", "doc": "<p>Performs a PATCH request to the Airlock Host at the specified path.\nOptionally, the JSON payload and expected response status codes\ncan be specified.</p>\n\n<p>Returns the Response object to the performed request.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">body_dict</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>,</span><span class=\"param\">\t<span class=\"n\">exp_code</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "put", "type": "function", "doc": "<p>Performs a PUT request to the Airlock Host at the specified path.\nOptionally, the JSON payload and expected response status codes\ncan be specified.</p>\n\n<p>Returns the Response object to the performed request.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">body_dict</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>,</span><span class=\"param\">\t<span class=\"n\">exp_code</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "delete", "type": "function", "doc": "<p>Performs a DELETE request to the Airlock Host at the specified path.\nOptionally, the expected response status codes can be specified.</p>\n\n<p>Returns the Response object to the performed request.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">body_dict</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">exp_code</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "get", "type": "function", "doc": "<p>Performs a GET request to the Airlock Host at the specified path.\nOptionally, the expected response status codes can be specified.</p>\n\n<p>Returns the Response object to the performed request.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">exp_code</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Response</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "create_session", "type": "function", "doc": "<p>Creates a new session with the given host.</p>\n\n<p>Returns the generated GatewaySession object,\nor None if the Session couldn't be started.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">host</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">api_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">port</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">443</span></span><span class=\"return-annotation\">) -> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "create_session_from_cookie", "type": "function", "doc": "<p>Retrieves an existing Gateway Session from the JSESSIONID Cookie.</p>\n\n<p>Returns the generated GatewaySession object.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">host</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">jsessionid</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "get_jsession_id", "type": "function", "doc": "<p>Returns the value of the JSESSIONID Cookie,\nor None if no such Cookie was found.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.terminate_session": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.terminate_session", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "terminate_session", "type": "function", "doc": "<p>Terminates the Gateway Session.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "get_configs", "type": "function", "doc": "<p>Returns a list containing all configurations on the\nAirlock Host as dictionary objects.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "validate", "type": "function", "doc": "<p>Returns True and an empty list if the configuration is valid,\nFalse and a list of error messages if it isn't.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">list</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "activate", "type": "function", "doc": "<p>Activates the currently loaded configuration on Airlock Host and\noptionally adds a comment to the activation.</p>\n\n<p>Returns True if the configuration was activated successfully and False\notherwise</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">comment</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "save_config", "type": "function", "doc": "<p>Saves the current configuration with an optional\n<code>comment</code> without activating it.</p>\n\n<p>Returns the ID of the newly saved configuration or None if\nthe configuration could not be saved.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">comment</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_license": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_license", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "update_license", "type": "function", "doc": "<p>Updates the license on the Airlock Host.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">lic_str</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "get_virtualhosts", "type": "function", "doc": "<p>Returns a list of dictionary objects describing all\nvirtual hosts on the Airlock Host.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "gen_standard_virtual_host_data", "type": "function", "doc": "<p>Generates and returns the data object necessary to upload a new virtual\nhost to the Airlock Host. This object can then for example be passed\nto the <code>add_virtual_host()</code> function to add a new virtual host. </p>\n\n<p>The virtual host data will have standard values for every attribute that\ncan not be given to this function as an argument.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">vh_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">ipv4_addr</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">interface</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">certificate</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "add_virtual_host", "type": "function", "doc": "<p>Adds a new virtual host to the Airlock Host. The <code>data</code> parameter\nhas to fully specify a valid virtual host configuration.</p>\n\n<p>For standard virtual hosts configuration use\n<code>add_standard_virtual_host()</code> instead.</p>\n\n<p>Returns the ID of the added virtual host.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "get_virtual_host_by_id", "type": "function", "doc": "<p>Returns a dictionary object representing the virtual host with\nthe given <code>vh_id</code> or None if no such virtual host was found</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">vh_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "update_virtual_host_by_id", "type": "function", "doc": "<p>Updates the virtual host with ID <code>vh_id</code> with the given <code>attributes</code>,\nfor example name, showMaintenancePage etc.</p>\n\n<p>Returns True if the update was successful and False if no virtual\nhost with ID <code>vh_id</code> was found.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">vh_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">attributes</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "delete_virtual_host_by_id", "type": "function", "doc": "<p>Deletes the Virtual Host with the selected ID.</p>\n\n<p>Returns True if deletion was successful and False otherwise.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">vh_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "get_all_mappings", "type": "function", "doc": "<p>Returns a list of dictionary object describing\nall mappings on the Airlock Host.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "select_mappings", "type": "function", "doc": "<p>Returns a list of dictionary object describing all mappings\nwhose name is matched by the <code>pattern</code> regular expression\nor who are labeled with <code>label</code>.</p>\n\n<p>If no parameter is given, all mappings are returned.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">pattern</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">label</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "get_mapping_id", "type": "function", "doc": "<p>Returns the ID of the mapping with the given <code>name</code>\nor None if no such mapping was found.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "get_mapping_by_id", "type": "function", "doc": "<p>Returns a dictionary object representing the mapping\nwith the given <code>mapping_id</code> or None if no such mapping\nwas found.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">mapping_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "get_mapping_by_name", "type": "function", "doc": "<p>Returns a dictionary object representing the mapping\nwith the given <code>name</code> or an empty dictionary if no\nsuch mapping was found.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "get_all_mapping_names", "type": "function", "doc": "<p>Returns a sorted list of all mapping names on the Airlock Host.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "import_mappings_from_xml", "type": "function", "doc": "<p>Adds all mappings specified in the list of dictionary objects\nrepresenting XML files stored in  <code>mappings_xmls</code> on the\nAirlock Host. If a mapping with the same name already exists,\nit will be overwritten.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">gw_session</span>, </span><span class=\"param\"><span class=\"n\">mappings_xmls</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "export_mappings", "type": "function", "doc": "<p>Returns a list of the XML files describing the mappings with IDs\ncontained in the <code>mapping_ids</code> list.</p>\n\n<p><code>mapping_ids</code> must be a list of strings. If it is omitted, all mappings\nare returned. </p>\n\n<p>If one or more of the mappings IDs is not found, it is ignored.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">mapping_ids</span><span class=\"p\">:</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "delete_mapping_by_id", "type": "function", "doc": "<p>Deletes the Mapping with the selected ID.</p>\n\n<p>Returns True if deletion was successful and False if no mapping with ID\n<code>mapping_id</code> was found..</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">mapping_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "get_templates", "type": "function", "doc": "<p>Returns a dictionary object mapping every mapping template name to its ID.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "update_mapping", "type": "function", "doc": "<p>Updates the mapping with ID <code>mapping_id</code> with the given <code>attributes</code>,\nfor example name or entry path.</p>\n\n<p>Returns True if update was successful and False if no mapping with ID\n<code>mapping_id</code> was found.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">mapping_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">attributes</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "add_mapping", "type": "function", "doc": "<p>Adds a new mapping to the Airlock host, with the specified\n   <code>name</code> and <code>entry_path</code>.\nOptionally, a template can\n   be used for the new mapping.</p>\n\n<p>Returns the mapping ID of the new mapping.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">template</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;New_Mapping&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">entry_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;/&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "set_source_mapping", "type": "function", "doc": "<p>Sets the source mapping of mapping with ID <code>mapping_id</code>\nto the mapping with ID <code>src_mapping_id</code>. </p>\n\n<p>Returns True if the operation was successful and False if\nno mapping with ID <code>mapping_id</code> was found.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">mapping_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">src_mapping_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "pull_from_source_mapping", "type": "function", "doc": "<p>Performs a pull from the source mapping on the mapping with\nID <code>mapping_id</code>.</p>\n\n<p>Returns True if the pull was succesfull and False if no mapping with ID\n<code>mapping_id</code> was found.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">mapping_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_backend_host": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_backend_host", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "gen_backend_host", "type": "function", "doc": "<p>Returns a dictionary object representing a new Backend Host.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">protocol</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">port</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "add_backend_group", "type": "function", "doc": "<p>Adds a new Backend Group with the name <code>beg_name</code> and the hosts\ncontained in <code>be_hosts</code> to the Airlock Host.</p>\n\n<p>Returns the ID of the newly added Backend Group.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">beg_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">be_hosts</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "get_backend_groups", "type": "function", "doc": "<p>Returns a list containing all backend groups on the Airlock Host.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "get_backend_group_by_id", "type": "function", "doc": "<p>Returns a dictionary object describing the backend group with ID\n<code>beg_id</code>, or None if no such group was found.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">beg_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "update_backend_group_by_id", "type": "function", "doc": "<p>Updates the Backend Group with ID <code>beg_id</code> with the given attributes,\nfor example hostname or port. </p>\n\n<p>Returns True if the update was succesfull and False if no Backend Group\nwith ID <code>beg_id</code> was found.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">beg_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">attributes</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "delete_backend_group_by_id", "type": "function", "doc": "<p>Deletes the Backend Group with ID <code>beg_id</code> from the Airlock Host.</p>\n\n<p>Returns True if deletion was successful and False if no Backend\nGroup with ID <code>beg_id</code> was found.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">beg_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "connect_virtual_host_to_map", "type": "function", "doc": "<p>Connects Virtual Host with id <code>vh_id</code> to the Mapping with ID\n   <code>mapping_id</code>.\nReturns True if the operation was successful\n   and False if one of the provided IDs was not found.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">vh_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">mapping_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "connect_map_to_beg", "type": "function", "doc": "<p>Connects Mapping with ID <code>mapping_id</code> to the Backend Groups\nwith IDs in <code>beg_ids</code>.</p>\n\n<p>Returns True if the operation was successful and False if one of\nthe provided IDs was not found.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">mapping_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">beg_ids</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "disconnect_virtual_host_to_map", "type": "function", "doc": "<p>Disconnects Virtual Host with id <code>vh_id</code> to the Mapping with\n   ID <code>mapping_id</code>.\nReturns True if the operation was successful\n   and False if one of the provided IDs was not found.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">vh_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">mapping_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "disconnect_map_to_beg", "type": "function", "doc": "<p>Disconnects Mapping with ID <code>mapping_id</code> from the Backend Groups\n   with IDs in <code>beg_ids</code>.\nReturns True if the operation was successful\n   and False if one of the provided IDs was not found.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">mapping_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">beg_ids</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "get_mapping_deny_rule_group", "type": "function", "doc": "<p>Returns a dictionary object describing the deny rule group in the\nspecified Mapping, or None if the mapping or shortname specified were not\nfound.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">mapping_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">denyrule_group_shortname</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "update_mapping_deny_rule_group", "type": "function", "doc": "<p>Updates the settings for a deny rule group within a specified mapping.\nReturns True if successful, and False if if the mapping or shortname\nspecified were not found.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">mapping_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">denyrule_group_shortname</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">attributes</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "get_mapping_deny_rule", "type": "function", "doc": "<p>Returns a dictionary object describing the deny rule in the specified\nMapping, or None if the mapping or shortname specified were not found.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">mapping_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">denyrule_shortname</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "update_mapping_deny_rule", "type": "function", "doc": "<p>Updates the settings for a deny rule within a specified mapping. Returns\nTrue if successful, and False if if the mapping or shortname specified\nwere not found.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">mapping_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">denyrule_shortname</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">attributes</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "get_deny_rule_groups", "type": "function", "doc": "<p>Returns a list of all deny rule groups on the Airlock Host.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "get_deny_rule_group", "type": "function", "doc": "<p>Returns a dictionary object describing the specified deny rule group,\nor None if it does not exist.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">short_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "get_deny_rules", "type": "function", "doc": "<p>Returns a list of all deny-rules on the Airlock Host.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "get_deny_rule", "type": "function", "doc": "<p>Returns a dictionary object describing the specified deny-rule, or None\nif it does not exist.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">short_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "load_config", "type": "function", "doc": "<p>Loads the configuration with ID <code>config_id</code> on the Airlock Host.</p>\n\n<p>Returns True if the operation was successful and False if no configuration\nwith ID <code>config_id</code> was found.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">config_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">host_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "load_empty_config", "type": "function", "doc": "<p>Loads the empty configuration on the Airlock Host.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">host_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_active_config": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_active_config", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "load_active_config", "type": "function", "doc": "<p>Loads the currently active configuration on the Airlock Host.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_initial_config": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_initial_config", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "load_initial_config", "type": "function", "doc": "<p>Loads the initial configuration on the Airlock Host.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "import_config", "type": "function", "doc": "<p>Imports the configuration zip file located at\n<code>cfg_zip</code> to the Airlock Host.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">cfg_zip</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "export_current_config_file", "type": "function", "doc": "<p>Exports the currently active configuration to a\nzip file located at <code>cfg_zip</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">cfg_zip</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "get_error_page_settings", "type": "function", "doc": "<p>Returns a dictionary object describing the current error page settings.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "set_error_page_settings", "type": "function", "doc": "<p>Updates the error page settings with the given attributes.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">attributes</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "get_error_pages", "type": "function", "doc": "<p>Returns a zip file containing the error pages</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "set_error_pages", "type": "function", "doc": "<p>Imports the error page zip-file located at <code>error_page_zip</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">error_page_zip</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_error_pages": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_error_pages", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "delete_error_pages", "type": "function", "doc": "<p>Remove the custom error pages.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "get_default_error_pages", "type": "function", "doc": "<p>Returns a zip file containing the default error pages.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bytes</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "get_expert_settings", "type": "function", "doc": "<p>Returns a dict containing the global expert settings for the Gateway as well as for Apache</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"fullname": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings", "modulename": "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib", "qualname": "set_expert_settings", "type": "function", "doc": "<p>Updates the global expert settings with the given attributes.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">gw_session</span><span class=\"p\">:</span> <span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">airlock_gateway_rest_api_lib</span><span class=\"o\">.</span><span class=\"n\">GatewaySession</span>,</span><span class=\"param\">\t<span class=\"n\">attributes</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}}, "docInfo": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"qualname": 0, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 164}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError": {"qualname": 1, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 21}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError.__init__": {"qualname": 3, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 3}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession": {"qualname": 1, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.__init__": {"qualname": 3, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 3}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"qualname": 3, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 31}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.get_session": {"qualname": 3, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 11}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"qualname": 2, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 27}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"qualname": 2, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 131, "bases": 0, "doc": 42}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"qualname": 1, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 121, "bases": 0, "doc": 41}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"qualname": 1, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 110, "bases": 0, "doc": 38}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"qualname": 1, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 103, "bases": 0, "doc": 38}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"qualname": 1, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 103, "bases": 0, "doc": 38}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"qualname": 1, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 110, "bases": 0, "doc": 35}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"qualname": 1, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 91, "bases": 0, "doc": 35}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"qualname": 2, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 68, "bases": 0, "doc": 28}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"qualname": 4, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 20}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"qualname": 3, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 18}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.terminate_session": {"qualname": 2, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 7}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"qualname": 2, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 16}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"qualname": 1, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 25}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"qualname": 1, "fullname": 11, "annotation": 0, "default_value": 0, "signature": 57, "bases": 0, "doc": 32}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"qualname": 2, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 57, "bases": 0, "doc": 36}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_license": {"qualname": 2, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 10}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"qualname": 2, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 17}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"qualname": 5, "fullname": 15, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 68}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"qualname": 3, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 54}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"qualname": 5, "fullname": 15, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 26}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"qualname": 5, "fullname": 15, "annotation": 0, "default_value": 0, "signature": 62, "bases": 0, "doc": 48}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"qualname": 5, "fullname": 15, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 23}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"qualname": 3, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 16}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"qualname": 2, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 75, "bases": 0, "doc": 43}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"qualname": 3, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 23}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"qualname": 4, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 25}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"qualname": 4, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 26}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"qualname": 4, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 15}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"qualname": 4, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 39}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"qualname": 2, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 61}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"qualname": 4, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 32}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"qualname": 2, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 15}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"qualname": 2, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 62, "bases": 0, "doc": 46}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"qualname": 2, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 96, "bases": 0, "doc": 43}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"qualname": 3, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 64, "bases": 0, "doc": 48}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"qualname": 4, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 42}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_backend_host": {"qualname": 3, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 12}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"qualname": 3, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 63, "bases": 0, "doc": 40}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"qualname": 3, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 14}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"qualname": 5, "fullname": 15, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 25}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"qualname": 5, "fullname": 15, "annotation": 0, "default_value": 0, "signature": 62, "bases": 0, "doc": 46}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"qualname": 5, "fullname": 15, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 40}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"qualname": 5, "fullname": 15, "annotation": 0, "default_value": 0, "signature": 63, "bases": 0, "doc": 39}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"qualname": 4, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 63, "bases": 0, "doc": 43}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"qualname": 5, "fullname": 15, "annotation": 0, "default_value": 0, "signature": 63, "bases": 0, "doc": 39}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"qualname": 4, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 63, "bases": 0, "doc": 40}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"qualname": 5, "fullname": 15, "annotation": 0, "default_value": 0, "signature": 64, "bases": 0, "doc": 27}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"qualname": 5, "fullname": 15, "annotation": 0, "default_value": 0, "signature": 75, "bases": 0, "doc": 31}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"qualname": 4, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 63, "bases": 0, "doc": 26}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"qualname": 4, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 30}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"qualname": 4, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 15}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"qualname": 4, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 20}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"qualname": 3, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 14}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"qualname": 3, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 19}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"qualname": 2, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 70, "bases": 0, "doc": 39}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"qualname": 3, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 11}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_active_config": {"qualname": 3, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 12}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_initial_config": {"qualname": 3, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 11}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"qualname": 2, "fullname": 12, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 18}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"qualname": 4, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 18}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"qualname": 4, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 13}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"qualname": 4, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 47, "bases": 0, "doc": 12}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"qualname": 3, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 10}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"qualname": 3, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 16}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_error_pages": {"qualname": 3, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 8}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"qualname": 4, "fullname": 14, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 12}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"qualname": 3, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 18}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"qualname": 3, "fullname": 13, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 12}}, "length": 76, "save": true}, "index": {"qualname": {"root": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError.__init__": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.__init__": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1}}, "df": 4}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_active_config": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError.__init__": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.__init__": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_initial_config": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1}}, "df": 10}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 1}}, "df": 2}}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.__init__": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.get_session": {"tf": 1}}, "df": 4}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.get_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1}}, "df": 25}, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_backend_host": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1}}, "df": 7, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1}}, "df": 2}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_backend_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}}, "df": 8}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.get_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.terminate_session": {"tf": 1}}, "df": 4}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"tf": 1}}, "df": 4}}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}}, "df": 7, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "w": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1}}, "df": 7, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 1}}, "df": 2, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 1}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "l": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_error_pages": {"tf": 1}}, "df": 5}}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1}}, "df": 8}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}}, "df": 2}}}}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_active_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_initial_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1}}, "df": 7, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1}}, "df": 1}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.terminate_session": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}}, "df": 4}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_license": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}}, "df": 6}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_license": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_active_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_initial_config": {"tf": 1}}, "df": 4}}}}, "b": {"docs": {}, "df": 0, "y": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1}}, "df": 9}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_backend_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1}}, "df": 6}}}}}}, "e": {"docs": {}, "df": 0, "g": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}}, "df": 4, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}}, "df": 13, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1}}, "df": 4}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1}}, "df": 1, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 1}}, "df": 6}}}}}}}, "fullname": {"root": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError.__init__": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.__init__": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError.__init__": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.__init__": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.get_session": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.terminate_session": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_license": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_backend_host": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_active_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_initial_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"tf": 1.4142135623730951}}, "df": 76, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError.__init__": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.__init__": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.get_session": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.terminate_session": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_license": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_backend_host": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_active_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_initial_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"tf": 1.4142135623730951}}, "df": 76}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1}}, "df": 4}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_active_config": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1}}, "df": 2}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError.__init__": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.__init__": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.get_session": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.terminate_session": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_license": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_backend_host": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_active_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_initial_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"tf": 1.4142135623730951}}, "df": 76, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.__init__": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.get_session": {"tf": 1}}, "df": 4}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.get_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1}}, "df": 25}, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_backend_host": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1}}, "df": 7, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError.__init__": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.__init__": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.get_session": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.terminate_session": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_license": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_backend_host": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_active_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_initial_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"tf": 1.4142135623730951}}, "df": 76}}, "q": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "w": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1}}, "df": 7, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError.__init__": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.__init__": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.get_session": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.terminate_session": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_license": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_backend_host": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_active_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_initial_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"tf": 1.4142135623730951}}, "df": 76}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_license": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_active_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_initial_config": {"tf": 1}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError.__init__": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.__init__": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_initial_config": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1}}, "df": 10}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 1}}, "df": 2}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_backend_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}}, "df": 8}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.get_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.terminate_session": {"tf": 1}}, "df": 4}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"tf": 1}}, "df": 4}}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}}, "df": 7, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 1}}, "df": 2, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 1}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "l": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_error_pages": {"tf": 1}}, "df": 5}}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1}}, "df": 8}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}}, "df": 2}}}}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_active_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_initial_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1}}, "df": 7, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1}}, "df": 1}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.terminate_session": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}}, "df": 4}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_license": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}}, "df": 6}}}}}}, "b": {"docs": {}, "df": 0, "y": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1}}, "df": 9}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_backend_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1}}, "df": 6}}}}}}, "e": {"docs": {}, "df": 0, "g": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}}, "df": 4, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}}, "df": 13, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1}}, "df": 4}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1}}, "df": 1, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 1}}, "df": 6}}}}}}}, "annotation": {"root": {"docs": {}, "df": 0}}, "default_value": {"root": {"docs": {}, "df": 0}}, "signature": {"root": {"3": {"9": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "4": {"4": {"3": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError.__init__": {"tf": 3.4641016151377544}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.__init__": {"tf": 6.48074069840786}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 4.242640687119285}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.get_session": {"tf": 4.47213595499958}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 5.916079783099616}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 10}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 9.539392014169456}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 9.055385138137417}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 8.717797887081348}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 8.717797887081348}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 9.055385138137417}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 8.18535277187245}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 7}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 5.830951894845301}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 5}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.terminate_session": {"tf": 5}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 5}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 5.916079783099616}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 6.324555320336759}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 6.324555320336759}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_license": {"tf": 5.830951894845301}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 5}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 6.324555320336759}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 5.830951894845301}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 5.830951894845301}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 6.557438524302}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 5.830951894845301}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 5}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 7.416198487095663}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 5.830951894845301}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 5.830951894845301}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 5.830951894845301}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 5}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 4.242640687119285}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 6.324555320336759}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 5.830951894845301}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"tf": 5}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 6.557438524302}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 8.306623862918075}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 6.557438524302}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 5.830951894845301}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_backend_host": {"tf": 5.656854249492381}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 6.557438524302}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 5}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 5.830951894845301}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 6.557438524302}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 5.830951894845301}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 6.557438524302}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 6.557438524302}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 6.557438524302}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 6.557438524302}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 6.557438524302}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 7.211102550927978}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 6.557438524302}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 7.211102550927978}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 5}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 5.830951894845301}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 5}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 5.830951894845301}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 7}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"tf": 6.164414002968976}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_active_config": {"tf": 4.795831523312719}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_initial_config": {"tf": 4.795831523312719}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 5.656854249492381}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 5.656854249492381}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 5}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 5.656854249492381}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"tf": 5.916079783099616}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 5.656854249492381}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_error_pages": {"tf": 4.795831523312719}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 5}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 5}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"tf": 5.830951894845301}}, "df": 73, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError.__init__": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.__init__": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_license": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 2}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_backend_host": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 1}}, "df": 49}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.__init__": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.get_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.terminate_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_license": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_active_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_initial_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"tf": 1}}, "df": 67, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.__init__": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.get_session": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.get_session": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1}}, "df": 1}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}}, "df": 4}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError.__init__": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1}}, "df": 8}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}}, "df": 1}}}}}}}}}}, "f": {"docs": {}, "df": 0, "g": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError.__init__": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1}}, "df": 7}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}}, "df": 15, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}}, "df": 1}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.__init__": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"tf": 1}}, "df": 5, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.__init__": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_backend_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"tf": 1}}, "df": 11}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.__init__": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.terminate_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_license": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"tf": 1}}, "df": 17, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.__init__": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.get_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1}}, "df": 9}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.terminate_session": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_license": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_active_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_initial_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"tf": 1.4142135623730951}}, "df": 66}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1}}, "df": 7}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.__init__": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_backend_host": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1}}, "df": 8}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_backend_host": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.__init__": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_backend_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1}}, "df": 11, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "v": {"4": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1}}, "df": 20, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}}, "df": 3}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_backend_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"tf": 1}}, "df": 28}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}}, "df": 4}}}}}}}}, "g": {"docs": {}, "df": 0, "w": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.terminate_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_license": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_active_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_initial_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"tf": 1}}, "df": 65}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.terminate_session": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_license": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_active_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_initial_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"tf": 1.4142135623730951}}, "df": 66, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.terminate_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_license": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_active_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_initial_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"tf": 1}}, "df": 66}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.terminate_session": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_license": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_active_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_initial_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"tf": 1.4142135623730951}}, "df": 66}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.terminate_session": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_license": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_active_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_initial_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"tf": 1.4142135623730951}}, "df": 66}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"tf": 1}}, "df": 7}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.terminate_session": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_license": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_active_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_initial_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"tf": 1.4142135623730951}}, "df": 66}, "s": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 1}}, "df": 20}}, "c": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_license": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"tf": 1}}, "df": 9}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1}}, "df": 7}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1}}, "df": 5}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1}}, "df": 17}}}, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1}}, "df": 1, "g": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}}, "df": 6}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 1}}, "df": 2}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1}}, "df": 1}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "h": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}}, "df": 6}}, "x": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}}, "df": 1}}}}, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 1}}, "df": 3}}}}}, "bases": {"root": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError": {"tf": 1}}, "df": 1}}}}}}}}}}}, "doc": {"root": {"0": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1}}, "df": 1}, "4": {"0": {"4": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1}}, "df": 1}, "docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 4.898979485566356}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError.__init__": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession": {"tf": 2.8284271247461903}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.__init__": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 3.1622776601683795}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.get_session": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 2.449489742783178}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 2.449489742783178}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 2.449489742783178}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 2.449489742783178}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 2.449489742783178}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 2.449489742783178}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 2.449489742783178}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 2.449489742783178}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 2.449489742783178}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.terminate_session": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 2.23606797749979}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 2.8284271247461903}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_license": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 3}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 3.7416573867739413}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 2}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 3.4641016151377544}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 2.449489742783178}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 3.1622776601683795}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 2.23606797749979}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 2.23606797749979}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 2.23606797749979}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 2.23606797749979}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 3.605551275463989}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 2.8284271247461903}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 3.4641016151377544}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 3.1622776601683795}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 3.4641016151377544}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 3.1622776601683795}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_backend_host": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 3.1622776601683795}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 2.23606797749979}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 3.1622776601683795}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 3.1622776601683795}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 2.6457513110645907}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 3.1622776601683795}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 2.6457513110645907}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 2.6457513110645907}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 3.1622776601683795}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_active_config": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_initial_config": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 2.23606797749979}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 2.23606797749979}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 2.23606797749979}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_error_pages": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"tf": 1.7320508075688772}}, "df": 76, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 3}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 1}}, "df": 11}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_license": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1}}, "df": 1}}, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_active_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_initial_config": {"tf": 1}}, "df": 4}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 1}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 2}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1.4142135623730951}}, "df": 12}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1}}, "df": 24}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1}}, "df": 17}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 1}}, "df": 5, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 1}}, "df": 7, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1}}, "df": 2}}}}, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError": {"tf": 1}}, "df": 2, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}}, "df": 6}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1}}, "df": 7}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"tf": 1}}, "df": 3}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1}}, "df": 2, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession": {"tf": 1}}, "df": 2}, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1}}, "df": 2}, "r": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError": {"tf": 1}}, "df": 2}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}}, "df": 3, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_license": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"tf": 1}}, "df": 8}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.get_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 1}}, "df": 24, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1}}, "df": 20}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_license": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_active_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_initial_config": {"tf": 1}}, "df": 15, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}}, "df": 6}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}}, "df": 2}}}}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.get_session": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_backend_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1}}, "df": 24, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}}, "df": 3}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1}}, "df": 9}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1}}, "df": 6}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_backend_host": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1}}, "df": 44, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_license": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_active_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_initial_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 1}}, "df": 30, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1}}, "df": 6, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1}}, "df": 27}, "y": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1}}, "df": 3}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 1}}, "df": 11}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1}}, "df": 6}, "e": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 1}}, "df": 10, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}}, "df": 1, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"tf": 1}}, "df": 5}}}}}}}}}, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1.4142135623730951}}, "df": 3}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1}}, "df": 1}, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_active_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}}, "df": 6}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1}}, "df": 13, "l": {"docs": {}, "df": 0, "y": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}}, "df": 2}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1}}, "df": 9}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.get_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.terminate_session": {"tf": 1}}, "df": 6}}}}}, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 1}}, "df": 1, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"tf": 1}}, "df": 6}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1}}, "df": 2}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1}}, "df": 15}}}, "y": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1}}, "df": 1}, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1.4142135623730951}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}}, "df": 4}}}}}}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 1}}, "df": 4}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1.4142135623730951}}, "df": 8}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1.4142135623730951}}, "df": 7, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.get_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_backend_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1}}, "df": 58}, "e": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1}}, "df": 1}, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_backend_host": {"tf": 1}}, "df": 5}}}}}}}}}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_error_pages": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 2}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1}}, "df": 7, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1}}, "df": 2, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 2}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.get_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1.4142135623730951}}, "df": 3}}, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 2.449489742783178}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.get_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 2.449489742783178}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 2.449489742783178}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 2.23606797749979}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 2.23606797749979}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 2.23606797749979}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 2.23606797749979}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 2.23606797749979}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.terminate_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 2}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_license": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 2}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 2}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 2}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 2.23606797749979}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 2.23606797749979}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_active_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_initial_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"tf": 1.4142135623730951}}, "df": 72, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}}, "df": 3}}}, "o": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 2}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 2.23606797749979}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1}}, "df": 23}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.terminate_session": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1}}, "df": 17}}}}, "i": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 2}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1.7320508075688772}}, "df": 4, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1}}, "df": 1}}, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1}}, "df": 8, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"tf": 1}}, "df": 1}}, "f": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1.4142135623730951}}, "df": 35}, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 2}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 2}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 2.449489742783178}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 2}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 2}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 2}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 2}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 2}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 2}}, "df": 23, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 2}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1.7320508075688772}}, "df": 5}}, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1}}, "df": 8, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.get_session": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_initial_config": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1}}, "df": 16, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1}}, "df": 15}, "n": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1}}, "df": 12}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_backend_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1}}, "df": 7, "l": {"docs": {}, "df": 0, "y": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1.4142135623730951}}, "df": 9, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1}, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1}}, "df": 9}, "c": {"docs": {}, "df": 0, "h": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}}, "df": 5}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}}, "df": 5}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1}}, "df": 8}}, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1}}, "df": 8}}}}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "l": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1.4142135623730951}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1}}, "df": 1, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1}}, "df": 3}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1}}, "df": 10}}}}}}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1}}, "df": 8}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_backend_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1}}, "df": 16}}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}}, "df": 2}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 2}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1}}, "df": 17, "s": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError": {"tf": 1}}, "df": 1}}, "g": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}}, "df": 6}}, "y": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 2.23606797749979}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}}, "df": 3}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_backend_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}}, "df": 8}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_templates": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 2}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 2}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 2.6457513110645907}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 2.23606797749979}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1.4142135623730951}}, "df": 21, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1.7320508075688772}}, "df": 4}}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1}}, "df": 2}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1.4142135623730951}}, "df": 1, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_active_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_initial_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1}}, "df": 10, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 1}}, "df": 1}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1}}, "df": 8}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1}}, "df": 2, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1.4142135623730951}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1}}, "df": 9, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_error_pages": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_page_settings": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_active_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1}}, "df": 3}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "g": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1}}, "df": 2}}}, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.AirlockGatewayRestError": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1}}, "df": 2}, "v": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_configs": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_license": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 2.23606797749979}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 2.23606797749979}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_all_mapping_names": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_backend_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rules": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_empty_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_active_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_initial_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 1}}, "df": 35, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1.4142135623730951}}, "df": 3}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.terminate_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1}}, "df": 5, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1}}, "df": 1, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1}}, "df": 2}, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"tf": 1}}, "df": 15}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_group": {"tf": 1}}, "df": 7, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_groups": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_deny_rule_groups": {"tf": 1}}, "df": 4}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"tf": 1}}, "df": 2}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}}, "df": 4}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req_raw": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_mapping": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_backend_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1.7320508075688772}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_page_settings": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_expert_settings": {"tf": 1}}, "df": 30, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.save_config": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.GatewaySession.add_headers": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.activate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_by_name": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_mapping_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_source_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.pull_from_source_mapping": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_backend_group_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_backend_group_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_map_to_beg": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_map_to_beg": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.load_config": {"tf": 1.4142135623730951}}, "df": 21}}, "h": {"docs": {}, "df": 0, "o": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.select_mappings": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule_group": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_mapping_deny_rule": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_mapping_deny_rule": {"tf": 1}}, "df": 4}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_expert_settings": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_version": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1}}, "df": 1, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.validate": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtualhosts": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.gen_standard_virtual_host_data": {"tf": 2}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.add_virtual_host": {"tf": 2.23606797749979}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.delete_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}}, "df": 8}}}}}}, "h": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_virtual_host_by_id": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.update_virtual_host_by_id": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.connect_virtual_host_to_map": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.disconnect_virtual_host_to_map": {"tf": 1}}, "df": 4}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.req": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.post": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.patch": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.put": {"tf": 1}}, "df": 4}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.create_session_from_cookie": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_jsession_id": {"tf": 1}}, "df": 2}}}}}}}}}}, "x": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_mappings": {"tf": 1}}, "df": 2, "s": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_mappings_from_xml": {"tf": 1}}, "df": 1}}}}, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.import_config": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.export_current_config_file": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_error_pages": {"tf": 1}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.set_error_pages": {"tf": 1.4142135623730951}, "airlock_gateway_rest_api_lib.airlock_gateway_rest_api_lib.get_default_error_pages": {"tf": 1}}, "df": 5}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();